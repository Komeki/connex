from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from utils.states import CreateEvent
from utils.database import add_event

from keyboards.inline import confirm_posts
from keyboards.curator_reply import admin_kb

router = Router()

# 1 –ö–Ω–æ–ø–∫–∞ - –°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
@router.callback_query(F.data == "curator_create_event")
async def create_event(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
    await state.set_state(CreateEvent.name)

@router.message(CreateEvent.name)
async def event_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
    await state.set_state(CreateEvent.description)

@router.message(CreateEvent.description)
async def event_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await message.answer("üïí –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 21 –º–∞—è –≤ 18:00):")
    await state.set_state(CreateEvent.time)

@router.message(CreateEvent.time)
async def event_time(message: Message, state: FSMContext):
    await state.update_data(time=message.text)
    await message.answer("üìç –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:")
    await state.set_state(CreateEvent.location)

@router.message(CreateEvent.location)
async def event_location(message: Message, state: FSMContext):
    await state.update_data(location=message.text)
    await message.answer("üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
    await state.set_state(CreateEvent.image)

@router.message(F.photo)
async def event_image(message: Message, state: FSMContext):
    photo_id = message.photo[-1].file_id

    data = await state.get_data()

    add_event(
        name=data.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏'),
        description=data.get('description', ''),
        time=data.get('time', ''),
        location=data.get('location', ''),
        image_id=photo_id
    )

    post_text = (
        f"<b>{data.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}</b>\n\n"
        f"{data.get('description', '')}\n\n"
        f"üïí <b>–í—Ä–µ–º—è:</b> {data.get('time', '')}\n"
        f"üìç <b>–ú–µ—Å—Ç–æ:</b> {data.get('location', '')}"
    )

    await state.clear()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–æ–º
    msg_post = await message.answer_photo(
        photo=photo_id,
        caption=post_text,
        parse_mode="HTML"
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(post_msg_id=msg_post.message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", –æ—Ç–≤–µ—á–∞—è –Ω–∞ –ø–æ—Å—Ç
    await message.answer(
        '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç?',
        reply_markup=confirm_posts(),
        reply_to_message_id=msg_post.message_id
    )

@router.callback_query(F.data == "confirm_post")
async def confirmpost(callback: CallbackQuery, state: FSMContext):
    await callback.answer()

    data = await state.get_data()
    post_msg_id = data.get('post_msg_id')

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç?"
    await callback.message.delete()

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ–º
    await callback.message.bot.delete_message(
        chat_id=callback.message.chat.id,
        message_id=post_msg_id
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ reply_to_message_id
    await callback.message.answer(
        "–ü–æ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω ‚úÖ",
        reply_markup=admin_kb
    )

# 2 –ö–Ω–æ–ø–∫–∞ - –°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@router.callback_query(F.data == "curator_list_events")
async def list_events(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("üìã –°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")

# 3 –ö–Ω–æ–ø–∫–∞ - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@router.callback_query(F.data == "curator_edit_event")
async def edit_event(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")

# 4 –ö–Ω–æ–ø–∫–∞ - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@router.callback_query(F.data == "curator_delete_event")
async def delete_event(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
